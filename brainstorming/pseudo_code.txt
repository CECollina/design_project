


Initialization:
Display, I/O


Display:
    "Which wire?"
    *scissors* *green blue and red wires*
    (easy)       (medium)     (hard)
    *scissors transition between blue green or red
    wires based on arrow key presses* 

On ENTER press: 
Load acceleration rate, initial countdown, 
initialize timer



If the player performs the correct action within the time limit, increase the score and display "Success!" on the LCD.
If the player performs the wrong action or runs out of time, display "Boom!" on the LCD and end the game.
Score Display:

After each action, display the current score on the LCD.
If the game ends, display the final score and a message: "Game Over! Press any key to restart."
Additional Features:

Difficulty Levels: As the player's score increases, decrease the time limit to make the game more challenging.
Pause Feature: Allow the player to pause the game using a specific key on the USB keypad.
Leaderboard: Store the top scores and display them at the end of each game.



nitialize_game():
    display "Welcome to Bomb Defusal!"
    display "Press any key to start."
    score = 0

start_game():
    display "Defuse the bomb!"
    start countdown from 10

select_action():
    action = random(Action1, Action2, Action3)
    display "Perform [action]!"

validate_action():
    if correct action within time:
        score += 1
        display "Success!"
    else:
        display "Boom!"
        end_game()

display_score():
    display "Score: [score]"

end_game():
    display "Game Over! Score: [score]"
    display "Press any key to restart."

main():
    initialize_game()
    while True:
        if key_pressed:
            start_game()
            while game_not_over:
                select_action()
                validate_action()
                display_score()
